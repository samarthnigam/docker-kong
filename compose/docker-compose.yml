version: '3.9'
x-kong-config:
  &kong-env
  KONG_DATABASE: postgres
  KONG_PG_DATABASE: '${KONG_PG_DATABASE:-kong}'
  KONG_PG_HOST: db
  KONG_PG_USER: '${KONG_PG_USER:-kong}'
  KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password
volumes:
  kong_data: {}
  kong_prefix_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs
  kong_tmp_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs

networks:
  kong-net:
    external: false

services:
  kong:
    image: '${KONG_DOCKER_TAG:-kong:latest}'
    depends_on:
      db: 
        condition: service_healthy
    user: '${KONG_USER:-kong}'
    container_name: kong
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: '${KONG_PG_DATABASE:-kong}'
      KONG_PG_HOST: db
      KONG_PG_USER: '${KONG_PG_USER:-kong}'
      KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: '${KONG_PROXY_LISTEN:-0.0.0.0:8000}'
      KONG_ADMIN_LISTEN: '${KONG_ADMIN_LISTEN:-0.0.0.0:8001}'
      KONG_ADMIN_GUI_LISTEN: '${KONG_ADMIN_GUI_LISTEN:-0.0.0.0:8002}'
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_PREFIX: '${KONG_PREFIX:-/var/run/kong}'
      KONG_DECLARATIVE_CONFIG: /opt/kong/kong.yaml
    secrets:
      - kong_postgres_password
    networks:
      - kong-net
    ports:
      - '127.0.0.1:8000:8000/tcp'
      - '127.0.0.1:8001:8001/tcp'
      - '127.0.0.1:8002:8002/tcp'
    healthcheck:
      test:
        - CMD
        - kong
        - health
      interval: 10s
      timeout: 10s
      retries: 10
    restart: 'no'
    read_only: true
    volumes:
      - 'kong_prefix_vol:${KONG_PREFIX:-/var/run/kong}'
      - 'kong_tmp_vol:/tmp'
      - './config:/opt/kong'
    security_opt:
      - no-new-privileges
  db:
    image: 'postgres'
    profiles:
      - database
    container_name: db
    environment:
      POSTGRES_DB: '${KONG_PG_DATABASE:-kong}'
      POSTGRES_USER: '${KONG_PG_USER:-kong}'
      POSTGRES_PASSWORD_FILE: /run/secrets/kong_postgres_password
    secrets:
      - kong_postgres_password
    ports:
      - '5432:5432'
    healthcheck:
      test:
         [
          "CMD",
          "pg_isready",
          "-d",
          "${KONG_PG_DATABASE:-kong}",
          "-U",
          "${KONG_PG_USER:-kong}"
        ]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: 'no'
    stdin_open: true
    tty: true
    networks:
      - kong-net
    volumes:
      - 'kong_data:/var/lib/postgresql/data'
      - './keycloak-init-user-db.sh:/docker-entrypoint-initdb.d/keycloak-init-user-db.sh'

  keycloak:
    container_name: keycloak
    depends_on:
      db: 
        condition: service_healthy
    ports:
      - '8082:8080'
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_HEALTH_ENABLED=true
      - KC_DB=postgres
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=keycloak
      - KC_DB_SCHEMA=public
      - KC_DB_URL_DATABASE=keycloak
      - KC_DB_URL_HOST=db
    image: 'quay.io/keycloak/keycloak:latest'
    command: start-dev
    networks:
      - kong-net


  adminer:
    image: adminer
    ports:
      - 8081:8080
    networks:
      - kong-net
      
  kong-migrations:
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    command: kong migrations bootstrap
    profiles: [ "kong-migration" ]
    depends_on:
      - db
    environment:
      <<: *kong-env
    secrets:
      - kong_postgres_password
    networks:
      - kong-net
    restart: on-failure

secrets:
  kong_postgres_password:
    file: ./POSTGRES_PASSWORD
